<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hli.persistence.AdminMapper">

<update id="updateGoodsCommission" parameterType="GoodsVO">
	UPDATE goods
	SET
		updated = now(), commission=#{commission}
	WHERE goods_id = #{goods_id} 
</update>

<insert id="insertGoods" parameterType="GoodsVO" useGeneratedKeys="true" keyProperty="goods_id" keyColumn="goods_id">
	<choose>
	    <when test="isReal == true">
	    	INSERT INTO goods(provider, brand_name, goods_name, goods_code, thumbnail, market_price, sell_price, adj_price, goods_info, use_note, use_term, updated) 
			values(#{provider}, #{brand_name}, #{goods_name}, #{goods_code}, #{thumbnail}, #{market_price}, #{sell_price}, #{adj_price}, #{goods_info}, #{use_note}, #{use_term}, now());
	    </when>
	    <otherwise>
			INSERT INTO testgoods(provider, brand_name, goods_name, goods_code, thumbnail, market_price, sell_price, adj_price, goods_info, use_note, use_term, updated) 
			values(#{provider}, #{brand_name}, #{goods_name}, #{goods_code}, #{thumbnail}, #{market_price}, #{sell_price}, #{adj_price}, #{goods_info}, #{use_note}, #{use_term}, now());
	    </otherwise>
    </choose>
</insert>

<update id="updateGoods" parameterType="GoodsVO">
	<choose>
	    <when test="isReal == true">
			UPDATE goods
		</when>
		<otherwise>
			UPDATE testgoods
		</otherwise>
	</choose>
	
	<set>
		updated = now(),
		<if test="provider != 0">provider=#{provider},</if>
		<if test="brand_name != null">brand_name=#{brand_name},</if>
		<if test="goods_name != null">goods_name=#{goods_name},</if>
		<if test="goods_code != null">goods_code=#{goods_code},</if>
		<if test="thumbnail != null">thumbnail=#{thumbnail},</if>
		<if test="market_price != null">market_price=#{market_price},</if>
		<if test="sell_price != null">sell_price=#{sell_price},</if>
		<if test="adj_price != null">adj_price=#{adj_price},</if>
		<if test="goods_info != null">goods_info=#{goods_info},</if>
		<if test="use_note != null">use_note=#{use_note},</if>
		<if test="use_term != null">use_term=#{use_term}</if>
	</set>
	WHERE goods_id = #{goods_id} 
</update>

<select id="selectGoods" parameterType="GoodsVO" resultType="GoodsVO">
	<choose>
	    <when test="isReal == true">
			SELECT * FROM goods 
		</when>
		<otherwise>
			SELECT * FROM testgoods 
		</otherwise>
	</choose>
	
	WHERE goods_code = #{goods_code}
	Limit 1
</select>

<select id="selectGoodsList" parameterType="SearchVO" resultType="GoodsVO">
	<choose>
	    <when test="isReal == true">
			SELECT * FROM goods 
		</when>
		<otherwise>
			SELECT * FROM testgoods 
		</otherwise>
	</choose>
	
	<if test="page_size != 0">
		LIMIT #{start_index}, #{page_size}
	</if>
</select>

<select id="countGoods" parameterType="SearchVO" resultType="Integer">
	<choose>
	    <when test="isReal == true">
			SELECT count(*) FROM goods
		</when>
		<otherwise>
			SELECT count(*) FROM testgoods
		</otherwise>
	</choose>
	
</select>


<insert id="insertManager" parameterType="ManagerVO">
	INSERT INTO manager(id, pass, name, role_id)
		VALUES(HEX(AES_ENCRYPT(#{id}, 'hlint')), password(#{pass}), HEX(AES_ENCRYPT(#{name}, 'hlint')), #{role_id});
</insert>

<update id="updateManager" parameterType="ManagerVO">
	UPDATE manager
	<set>
		<if test="id != null">id=HEX(AES_ENCRYPT(#{id}, 'hlint')),</if>
		<if test="pass != null">pass=password(#{pass}),</if>
		<if test="name != null">name=HEX(AES_ENCRYPT(#{name}, 'hlint')),</if>
		<if test="role_id != 0">role_id=#{role_id}</if>
	</set>
	WHERE manager_id = #{manager_id}
</update>

<delete id="deleteManager" parameterType="ManagerVO">
	DELETE FROM manager
	WHERE manager_id = #{manager_id}
</delete>

<select id="countManager" parameterType="SearchVO" resultType="Integer">
	SELECT count(*) FROM manager
</select>

<select id="selectManager" parameterType="ManagerVO" resultType="ManagerVO">
	SELECT 
		manager_id,
		CAST(AES_DECRYPT(unhex(id), 'hlint') AS CHAR(100)) as 'id',
		pass,
		CAST(AES_DECRYPT(unhex(name), 'hlint') AS CHAR(100)) as 'name',
		role_id 
	FROM manager
	WHERE  
		 <choose>
		 	<when test="manager_id == 0">
		 		id=HEX(AES_ENCRYPT(#{id}, 'hlint')) AND pass=password(#{pass})	
		 	</when>
		 	<otherwise>
		 		manager_id=#{manager_id}
		 	</otherwise>
		 </choose>
	Limit 1
</select>

<select id="selectManagerList" parameterType="SearchVO" resultType="ManagerVO">
	SELECT 
		manager_id,
		CAST(AES_DECRYPT(unhex(id), 'hlint') AS CHAR(20)) as 'id',
		pass,
		CAST(AES_DECRYPT(unhex(name), 'hlint') AS CHAR(20)) as 'name',
		role_id
	FROM manager
	ORDER BY name
	<if test="page_size != 0">
		LIMIT #{start_index}, #{page_size}
	</if>
</select>

<!-- 판매업체 관리 -->
<insert id="insertSeller" parameterType="SellerVO" useGeneratedKeys="true" keyProperty="seller_id" keyColumn="seller_id">
	INSERT INTO seller(company_name, mid, password, person_name, contact,
					email, allowed_ip, sale_status)
		VALUES(#{company_name}, #{mid}, #{password}, #{person_name}, #{contact},
					#{email}, #{allowed_ip}, #{sale_status});
</insert>

<insert id="insertMapSellerGoods" parameterType="MapSellerGoodsVO">
	INSERT INTO map_seller_goods(seller_id, goods_id, commission)
	VALUES(#{seller_id}, #{goods_id}, #{commission});
</insert>

<update id="updateMapSellerGoods" parameterType="MapSellerGoodsVO">
	UPDATE map_seller_goods
	<set>
		<if test="commission != null">commission=#{commission}</if>
	</set>
	WHERE seller_id = #{seller_id} and goods_id = #{goods_id}
</update>

<update id="updateSeller" parameterType="SellerVO">
	UPDATE seller
	<set>
		<if test="company_name != null">company_name=#{company_name},</if>
		<if test="mid != null">mid=#{mid},</if>
		<if test="password != null">password=#{password},</if>
		<if test="person_name != null">person_name=#{person_name},</if>
		<if test="contact != null">contact=#{contact},</if>
		<if test="email != null">email=#{email},</if>
		<if test="allowed_ip != null">allowed_ip=#{allowed_ip},</if>
		<if test="sale_status != 0">sale_status=#{sale_status}</if>
	</set>
	WHERE seller_id = #{seller_id}
</update>

<delete id="deleteSeller" parameterType="SellerVO">
	DELETE FROM seller
	WHERE seller_id = #{seller_id}
</delete>

<select id="countSeller" parameterType="SearchVO" resultType="Integer">
	SELECT count(*) FROM manager
</select>

<select id="selectSellerList" parameterType="SearchVO" resultType="SellerVO">
	SELECT 
		seller_id, company_name, mid, password, person_name, contact,
		email, allowed_ip, sale_status
	FROM seller
	ORDER BY company_name
	<if test="page_size != 0">
		LIMIT #{start_index}, #{page_size}
	</if>
</select>

<select id="selectSeller" parameterType="SellerVO" resultType="SellerVO">
	SELECT *
	FROM seller
	WHERE mid = #{mid} and password = #{password}
	LIMIT 1;
</select>

<select id="selectGoodsOfSeller" parameterType="SearchVO" resultType="MapSellerGoodsVO">
	SELECT id, seller_id, map_seller_goods.commission, goods.goods_id, goods_name, sell_price
	FROM map_seller_goods inner join goods on map_seller_goods.goods_id = goods.goods_id
	WHERE map_seller_goods.seller_id = #{seller_id}
	LIMIT #{start_index}, #{page_size}
</select>

<select id="countGoodsOfSeller" parameterType="SearchVO" resultType="Integer">
	SELECT count(*) FROM map_seller_goods 
	WHERE seller_id = #{seller_id}
</select>

<!-- 판매업체에게 제공되는 상품 정보 리스트 -->
<select id="selectAllGoodsOfSeller" parameterType="SearchVO" resultType="SellerGoodsVO">
	<choose>
	    <when test="isReal == true">
			SELECT *
			FROM goods
			WHERE use_yn=0
		</when>
		<otherwise>
			SELECT *
			FROM testgoods
			WHERE use_yn=0
		</otherwise>
	</choose>
</select>

<!-- 발송정보 저장 -->
<insert id="insertSend" parameterType="SendVO">
	<choose>
	    <when test="isReal == true">
			INSERT INTO send(seller_id, goods_id, goods_count, sell_price, recv_phone, send_phone, 
				tr_id, userid, title, msg, status_code, result_code, couponnumber, pinnumber)
			VALUES(#{seller_id}, #{goods_id}, #{goods_count}, #{sell_price}, #{recv_phone}, #{send_phone}, 
				#{tr_id}, #{userid}, #{title}, #{msg}, #{status_code}, #{result_code}, #{couponnumber}, #{pinnumber});
		</when>
		<otherwise>
			INSERT INTO testsend(seller_id, goods_id, goods_count, sell_price, recv_phone, send_phone, 
				tr_id, userid, title, msg, status_code, result_code, couponnumber, pinnumber
			VALUES(#{seller_id}, #{goods_id}, #{goods_count}, #{sell_price}, #{recv_phone}, #{send_phone}, 
				#{tr_id}, #{userid}, #{title}, #{msg}, #{status_code}, #{result_code}, #{couponnumber}, #{pinnumber});
		</otherwise>
	</choose>

</insert>

<!-- 관리자화면: 발송정보 리스트 가져오기 -->
<select id="selectSendList" parameterType="SearchVO" resultType="SendVO">
	<choose>
	    <when test="isReal == true">
			SELECT send.*, seller.company_name, goods.brand_name 
			FROM send inner join seller on send.seller_id = seller.seller_id
				inner join goods on send.goods_id = goods.goods_id
		</when>
		<otherwise>
			SELECT testsend.*, seller.company_name, testgoods.brand_name 
			FROM testsend inner join seller on testsend.seller_id = seller.seller_id
				inner join testgoods on testsend.goods_id = testgoods.goods_id
		</otherwise>
	</choose>
		ORDER BY created desc
	<if test="page_size != 0">
		LIMIT #{start_index}, #{page_size}
	</if>
	
</select>

<select id="countSendList" parameterType="SearchVO" resultType="Integer">
	SELECT count(*) FROM 
		<choose>
	    <when test="isReal == true">
			send
		</when>
		<otherwise>
			testsend
		</otherwise>
	</choose>
</select>

</mapper>